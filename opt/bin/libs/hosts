#!/bin/sh
# ------------------------------------------------------------------------------------------
#
# 	ПРОЕКТ КВАС
#
# ------------------------------------------------------------------------------------------
# 	Данный файл служит основной библиотекой функций пакета КВАС
# ------------------------------------------------------------------------------------------
#	Разработчик: kvas@zeleza.ru
#	Дата: 17/01/2024
#	Лицензия: Apache License 2.0
# ------------------------------------------------------------------------------------------
# подключаем основную библиотеку
. /opt/apps/kvas/bin/libs/main

HOSTS_FILE=/opt/etc/hosts
#
# Выводим список доменных имен из файла /opt/etc/hosts
#
cmd_hosts_list(){
    warning "Список доменных имен в файле ${GREEN}${HOSTS_FILE}${NOCL}:"
	print_line
	[ -f ${HOSTS_FILE} ] || touch ${HOSTS_FILE}
    cat < ${HOSTS_FILE} | grep -vE '^#|^$'
}

dns_server_restart(){
	host="${1}"
	[ -f ${HOSTS_FILE} ] || touch ${HOSTS_FILE}
	[ -n "${host}" ] && get_iplist_from_domain "${host}" &> /dev/null
	if cmd_adguardhome_status | grep -q "ВКЛЮЧЕН" ; then
		mess="Перезапуск службы AdGuardHome..."
		service=/opt/etc/init.d/S99adguardhome
	else

		mess="Перезапуск службы dnsmasq..."
		service=/opt/etc/init.d/S56dnsmasq
	fi
	ready "${mess}"
	${service} restart &> /dev/null
	[ $? = 0 ] && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
}
#
# Редактируем список доменных имен в файле /opt/etc/hosts
#
cmd_hosts_edit(){
    nano ${HOSTS_FILE} && {
		ready "Файл ${HOSTS_FILE} обновлен..."
		when_ok "УСПЕШНО"
		dns_server_restart ""
    } || error "Возникли ошибки при сохранении или обновлении данных" nl
}

#
# Добавляем список доменных имен в файле /opt/etc/hosts
# добавлять можно как <domain> <ip>, так и kvas dns host add <ip> <domain>
#
cmd_hosts_one_add(){

	[ -f ${HOSTS_FILE} ] || touch ${HOSTS_FILE}

	if echo "${1}" | grep -qE "${IP_FILTER}"; then
		ip_host=${1}
		host=${2}
	elif echo "${2}" | grep -qE "${IP_FILTER}"; then
		ip=${2}
		host=${1}
	else
		error "Неправильно задан один из аргументов!" nl
		print_line
		exit 0
	fi
	ready "Доменное имя или IP ${host} удален/о..."
	"${host}" >> ${HOSTS_FILE}

	[ $? = 0 ] && {
		when_ok "УСПЕШНО"
		dns_server_restart "${host}"
	} || when_bad "ОШИБКА"

}

cmd_hosts_one_del(){

	if [ -f ${HOSTS_FILE} ] ; then 
		if [ -n "${1}" ] then
			sed -i "/${1}/d" ${HOSTS_FILE}
		else
			error "Аргумент не задан" nl
			print_line
			exit 0
		fi

	else
		warning "Файл ${GREEN}${HOSTS_FILE}${NOCL} не существует!"
	fi
}

cmd_hosts_prune(){
	read_ynq "Файл ${GREEN}${HOSTS_FILE}${NOCL} будет очищен. Продолжить?" answer
	if [ "${answer}" = y ] ; then
		ready "Файл ${GREEN}${HOSTS_FILE}${NOCL} очищен..."
		> ${HOSTS_FILE} && when_ok "УСПЕШНО" || when_bad "ОШИБКА"
	fi
}